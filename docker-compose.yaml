version: '3'
services:

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    expose:
      - 5432

  keycloak:
    image: jboss/keycloak:11.0.0
    container_name: keycloak
    restart: on-failure
    volumes:
      - ./realm-export.json:/tmp/keycloak/config/realm-export.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/keycloak/config/realm-export.json
    command:
      - "-b"
      - "0.0.0.0"
      - "-Djboss.socket.binding.port-offset=10000"
    expose:
      - 18080
    ports:
      - 18080:18080
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    expose:
      - 9090
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    expose:
      - 3000
    ports:
      - 3000:3000

  trace:
    container_name: trace
    image: openzipkin/zipkin
    restart: always
    ports:
      - 9411:9411
    expose:
      - 9411

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    hostname: mysql
    environment:
      MYSQL_DATABASE: 'vendas'
      MYSQL_USER: 'vendas'
      MYSQL_PASSWORD: 'vendas123'
      MYSQL_ROOT_PASSWORD: 'vendas123'
    ports:
      - 3307:3306
    expose:
      - 3307

  redis:
    container_name: redis
    image: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    expose:
      - 6379

  config:
    container_name: config
    image: gasparbarancelli/config:1.0
    restart: always
    environment:
      URI: 'https://github.com/gasparbarancelli/microservices-2.git'
    ports:
      - 8888:8888
    expose:
      - 8888

  discovery:
    container_name: discovery
    image: gasparbarancelli/discovery:2.0
    restart: always
    environment:
      CONFIG_SERVER_URL: 'http://config:8888'
    ports:
      - 8761:8761
    expose:
      - 8761
    depends_on:
      - config

  jms:
    container_name: jms
    image: rmohr/activemq
    restart: always
    ports:
      - 6161:61616
      - 8161:8161
    expose:
      - 6161
      - 8161
